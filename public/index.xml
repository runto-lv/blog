<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Runto的IT技术博客</title>
    <link>https://blog.runto.lv/</link>
    <description>Recent content on Runto的IT技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 21 Mar 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://blog.runto.lv/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://blog.runto.lv/about.html</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://blog.runto.lv/about.html</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;

&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>DataGuard standby数据库的日常维护</title>
      <link>https://blog.runto.lv/post/database/oracle_dataguard_standby.html</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.runto.lv/post/database/oracle_dataguard_standby.html</guid>
      
        <description>

&lt;p&gt;参考网址：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;https://www.cnblogs.com/wlmq/articles/6069477.html
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;1-停止standby&#34;&gt;1.停止Standby&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# 查看备库是否在应用日志进行恢复
select process, status from v$managed_standby;

alter database recover managed standby database cancel;
shutdown immediate;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-切换到只读模式&#34;&gt;2.切换到只读模式&lt;/h3&gt;

&lt;h4 id=&#34;2-1由shutdown模式切换到只读模式&#34;&gt;2.1由shutdown模式切换到只读模式&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;startup nomount;
alter database mount standby database;
alter database open read only;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-2由应用日志模式切换到只读模式&#34;&gt;2.2由应用日志模式切换到只读模式&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;alter database recover managed standby database cancel; -- 取消日志应用
alter database open read only;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-切换回管理恢复模式&#34;&gt;3.切换回管理恢复模式&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;startup nomount;
alter database mount standby database;
alter database open read only;
alter database recover managed standby database disconnect from session;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;ndash; 启动日志应用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alter database recover managed standby database using current logfile disconnect from session;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-主库和备库之间角色切换&#34;&gt;4.主库和备库之间角色切换&lt;/h3&gt;

&lt;p&gt;可以先使用下面这个命令查询一下各位的状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;select database_role,switchover_status from v$database;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-1-主库切换为备库&#34;&gt;4.1 主库切换为备库&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;alter database commit to switchover to physical standby;

# 主库有会话连接的时候,使用下面的，如果没有，可以使用上面的
alter database commit to switchover to physical standby with session shutdown;

shutdown immediate;
startup nomount;
alter database mount standby database;
alter database recover managed standby database disconnect from session;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-2-从库切换为主库&#34;&gt;4.2 从库切换为主库&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;alter database commit to switchover to primary;
shutdown immediate;
startup
alter system switch logfile;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-备库自动使用主库传过来的日志进行恢复&#34;&gt;5.备库自动使用主库传过来的日志进行恢复&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;alter database recover automatic standby database;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-更改保护模式&#34;&gt;6.更改保护模式&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;alter database set standby database to maximize protection;
alter database set standby database to maximize availability;
alter database set standby database to maximize performancen;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-取消自动恢复模式&#34;&gt;7.取消自动恢复模式&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;alter database recover managed standby database cancel;
alter database recover managed standby database finish;
alter database recover managed standby database finish force;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-查询同步状况&#34;&gt;8.查询同步状况&lt;/h3&gt;

&lt;p&gt;其中如果apply lag对应的value大于0，那么就需要注意检查是否同步正常。如果相差时间非常多，value值等于几分钟，甚至达到1个小时，那可能实时同步有问题，需要检查 alert log 文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;select to_char(SYSDATE,&#39;yyyymmdd hh24:mi:ss&#39;) CTIME,NAME,VALUE,DATUM_TIME from V$DATAGUARD_STATS  WHERE NAME LIKE &#39;%lag&#39;;
&lt;/code&gt;&lt;/pre&gt;
</description>
      
    </item>
    
    <item>
      <title>测试一下</title>
      <link>https://blog.runto.lv/post/other/first.html</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.runto.lv/post/other/first.html</guid>
      
        <description>

&lt;h1 id=&#34;这是一个测试站点&#34;&gt;这是一个测试站点&lt;/h1&gt;

&lt;p&gt;安装完成后，hugo是没有默认的主题的，可以去主题官网上下载主题： 直接clone主题到云服务器上的themes下&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Wordpress主题安装失败无法访问的解决办法</title>
      <link>https://blog.runto.lv/post/linux/wordpress_cannot_access.html</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.runto.lv/post/linux/wordpress_cannot_access.html</guid>
      
        <description>

&lt;p&gt;我们在wordpress主题theme配置的时候，会从网站上下载比较流行的theme，有不顺利的时候，你下载的theme有bug或者下载包出问题了，安装过后你的web页面不能在访问了。悲催，想通过web将theme改回去也不行。我们只能够通过后台数据库来手动修改theme了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;1-先登陆数据库&#34;&gt;1.先登陆数据库&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[root@wordpress themes]# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 1982
Server version: 5.5.64-MariaDB MariaDB Server

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

MariaDB [(none)]&amp;gt; use wordpress
MariaDB [wordpress]&amp;gt; SELECT *
    -&amp;gt; FROM wp_options
    -&amp;gt; WHERE option_name = &#39;template&#39;
    -&amp;gt; OR option_name = &#39;stylesheet&#39;
    -&amp;gt; OR option_name = &#39;current_theme&#39;;
+-----------+---------------+--------------+----------+
| option_id | option_name   | option_value | autoload |
+-----------+---------------+--------------+----------+
|       160 | current_theme | Jenney       | yes      |
|        41 | stylesheet    | jenney       | yes      |
|        40 | template      | jenney       | yes      |
+-----------+---------------+--------------+----------+

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从上面看到,当前使用了一个有问题的&amp;rsquo;jenney&amp;rsquo;的主题&lt;/p&gt;

&lt;h3 id=&#34;2-修改数据库&#34;&gt;2.修改数据库&lt;/h3&gt;

&lt;p&gt;在&lt;code&gt;/usr/share/nginx/wordpress/wp-content/themes&lt;/code&gt;目录,找到一个已经存在的主题,这里就选&lt;code&gt;win10explore&lt;/code&gt;,然后执行下面的命令,更新数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;UPDATE wp_options SET option_value = &#39;win10explore&#39; WHERE option_name = &#39;template&#39;;
 
UPDATE wp_options SET option_value = &#39;win10explore&#39; WHERE option_name = &#39;stylesheet&#39;;
 
UPDATE wp_options SET option_value = &#39;win10explore&#39; WHERE option_name = &#39;current_theme&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;具体执行结果如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MariaDB [wordpress]&amp;gt; UPDATE wp_options SET option_value = &#39;win10explore&#39; WHERE option_name = &#39;template&#39;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [wordpress]&amp;gt;  
MariaDB [wordpress]&amp;gt; UPDATE wp_options SET option_value = &#39;win10explore&#39; WHERE option_name = &#39;stylesheet&#39;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [wordpress]&amp;gt;  
MariaDB [wordpress]&amp;gt; UPDATE wp_options SET option_value = &#39;win10explore&#39; WHERE option_name = &#39;current_theme&#39;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0
&lt;/code&gt;&lt;/pre&gt;
</description>
      
    </item>
    
    <item>
      <title>Centos7上安装Wordpress</title>
      <link>https://blog.runto.lv/post/linux/wordpress_install.html</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.runto.lv/post/linux/wordpress_install.html</guid>
      
        <description>

&lt;h3 id=&#34;1-安装mysql&#34;&gt;1.安装mysql&lt;/h3&gt;

&lt;p&gt;yum -y install mariadb-server
修改配置文件my.cnf,mysqld段添加下面的内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;character-set-server=utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动mysql&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl enable mariadb &amp;amp;&amp;amp; systemctl start mariadb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置mysql,并设置root密码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建wordpress数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p

SQL&amp;gt; create database wordpress;
SQL&amp;gt; grant all privileges on wordpress.* to wp@&#39;localhost&#39; identified by &#39;R*****F&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-安装php-php-fpm&#34;&gt;2.安装php php-fpm&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum -y install php74 php74-php-fpm php74-php-pecl-mysql
systemctl enable php74-php-fpm &amp;amp;&amp;amp; systemctl start php74-php-fpm

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改下面这个配置文件的内容,否则无法下载插件,会弹出FTP的窗口&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /etc/opt/remi/php74/php-fpm.d/www.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把&lt;code&gt;user = apache&lt;/code&gt;修改成&lt;code&gt;user = nginx&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;参考这个网址&lt;/strong&gt;:&lt;a href=&#34;https://blog.csdn.net/c332030/article/details/89117206&#34;&gt;https://blog.csdn.net/c332030/article/details/89117206&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-安装wordpress&#34;&gt;3.安装wordpress&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/share/nginx
wget https://wordpress.org/latest.tar.gz
tar -xzvf latest.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建wordpressp配置文件，从 simple文件复制&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd wordpress
cp  wp-config-sample.php wp-config.php
--------------------------------------
define( &#39;DB_NAME&#39;, &#39;wordpress&#39; );

/** MySQL database username */
define( &#39;DB_USER&#39;, &#39;wp&#39; );

/** MySQL database password */
define( &#39;DB_PASSWORD&#39;, &#39;R*****F&#39; );

/** MySQL hostname */
define( &#39;DB_HOST&#39;, &#39;localhost&#39; );
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-安装nginx&#34;&gt;4.安装nginx&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum -y install nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginx需要修改下面的字段&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root         /usr/share/nginx/wordpress;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;location / {
            index  index.php;
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新增下面这段&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        location ~ .php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置nginx站点目录权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chown nginx.nginx /usr/share/nginx/wordpress -R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启相关服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl restart nginx &amp;amp;&amp;amp; systemctl restart php74-php-fpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-登陆图形界面配置&#34;&gt;5.登陆图形界面配置&lt;/h3&gt;

&lt;p&gt;访问下面的网址可以访问&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://IP地址
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建用户**&lt;strong&gt;&lt;em&gt;,密码&lt;/em&gt;&lt;/strong&gt;**&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Keepalived用法</title>
      <link>https://blog.runto.lv/post/linux/keepalived.html</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.runto.lv/post/linux/keepalived.html</guid>
      
        <description>

&lt;h2 id=&#34;测试一下图片&#34;&gt;测试一下图片&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../img/screenshot.png&#34; alt=&#34;1583138735899&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;抽象流程&#34;&gt;抽象流程&lt;/h4&gt;

&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;http://grstatic.oss-cn-shanghai.aliyuncs.com/images/docs/5.0/architecture/arch5.png&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;Rainbond的流程建立在&lt;code&gt;以应用为中心&lt;/code&gt;抽象基础上，以交付为目的&lt;/p&gt;

&lt;h4 id=&#34;场景流程&#34;&gt;场景流程&lt;/h4&gt;

&lt;h5 id=&#34;互联网公司交付流程&#34;&gt;互联网公司交付流程&lt;/h5&gt;

&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;http://grstatic.oss-cn-shanghai.aliyuncs.com/images/docs/5.0/architecture/flow1.png&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h5 id=&#34;企业软件公司交付流程&#34;&gt;企业软件公司交付流程&lt;/h5&gt;

&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;http://grstatic.oss-cn-shanghai.aliyuncs.com/images/docs/5.0/architecture/flow2.png&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h5 id=&#34;行业云交付流程&#34;&gt;行业云交付流程&lt;/h5&gt;

&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;http://grstatic.oss-cn-shanghai.aliyuncs.com/images/docs/5.0/architecture/flow3.png&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;h5 id=&#34;大型企事业单位it流程&#34;&gt;大型企事业单位IT流程&lt;/h5&gt;

&lt;p&gt;&lt;img width=&#34;100%&#34; src=&#34;http://grstatic.oss-cn-shanghai.aliyuncs.com/images/docs/5.0/architecture/flow4.png&#34;&gt;&lt;/img&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>mysql双主模式两台Server配置文件</title>
      <link>https://blog.runto.lv/post/database/mysql_conf.html</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.runto.lv/post/database/mysql_conf.html</guid>
      
        <description>&lt;p&gt;mysql master&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0
# Settings user and group are ignored when systemd is used.
# If you need to run mysqld under a different user or group,
# customize your systemd unit file for mariadb according to the
# instructions in http://fedoraproject.org/wiki/Systemd
server-id=2
relay_log = mysql-relay-bin
log_bin =mysql-bin
log_slave_updates =1
auto_increment_increment=2
auto_increment_offset=2
character-set-server=utf8
lower_case_table_names=1

[mysqld_safe]
log-error=/var/log/mariadb/mariadb.log
pid-file=/var/run/mariadb/mariadb.pid

#
# include all files from the config directory
#
!includedir /etc/my.cnf.d


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mysql slave&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0
# Settings user and group are ignored when systemd is used.
# If you need to run mysqld under a different user or group,
# customize your systemd unit file for mariadb according to the
# instructions in http://fedoraproject.org/wiki/Systemd
server-id = 1
log-bin = binlog
relay_log = mysql-relay-bin
log_slave_updates =1
auto_increment_increment=2
auto_increment_offset=1
character-set-server=utf8
lower_case_table_names=1

[mysqld_safe]
log-error=/var/log/mariadb/mariadb.log
pid-file=/var/run/mariadb/mariadb.pid

#
# include all files from the config directory
#
!includedir /etc/my.cnf.d

&lt;/code&gt;&lt;/pre&gt;
</description>
      
    </item>
    
  </channel>
</rss>
